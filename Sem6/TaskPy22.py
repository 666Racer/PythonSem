# Задача №45. Решение в группах
# Два различных натуральных числа n и m называются
# дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и
# наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных
# чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не
# превосходящее 105
# . Программа должна вывести все
# пары дружественных чисел, каждое из которых не
# превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть
# выведена только один раз (перестановка чисел новую
# пару не дает).
# Ввод: Вывод:
# 300 220 284

def divisors_sum (num): #функция поиска суммы делителей числа 
    sum = 0
    for i in range (1, num//2 + 1):
        if num % i == 0:
            sum +=i
    return sum

def friendly_numbers (k): #функция поиска дружественных чисел
    friendly_numbers_list = []
    for i in range (1, k):
        j = divisors_sum (i)
        if i == divisors_sum (j) and i < j < k:
            friendly_numbers_list.append((i, j))
    return friendly_numbers_list

list_1 = []
num_k = int(input('Введите число, до которого искать дружественные числа: '))
if num_k >= 0 and num_k <= 10000:
    list_1 = friendly_numbers(num_k)
    print(f"Дружественные числа в промежутке от 1 до {num_k} - {list_1}")
else:
    print("Число должно быть в диапазоне от 0 до 10000")

# while True:
#     k = int(input('Введите K -> '))
#     if k > 0 and k < 100000:
#         break


# def sumdivider(n):      # 220 - 2, 4, 5, 10, 11, 20, 22, 44, 55, 110
#     sum = 1
#     for i in range(2, int(n**0.5) + 1):
#         if n % i == 0:
#             sum += i + n//i
#     return sum
# # print(sumdivider(k))

# for i in range(1,k):
#     j = sumdivider(i)
#     if i == sumdivider(j) and i < j < k:
#         print(f'Пара дружественных чисел {i, j} в пределе {k}')

